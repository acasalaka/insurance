default:
  tags:
    - apap

.setup-ssh:
  before_script:
    - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )"
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

stages:
  - build
  - publish
  - deploy
  - clean

variables:
  IMAGE_OPENJDK_GRADLE: gradle:8.11.1-jdk21-alpine
  IMAGE_DOCKER_DIND: docker:27.3.1-alpine3.20

build-insurance:
  image: $IMAGE_OPENJDK_GRADLE
  stage: build
  only:
    - feat/tutorial-9-deployment
  script:
    - echo "Compile Insurance project to .jar"
    - cd $CI_PROJECT_DIR/insurance2206823682
    - sh gradlew clean assemble
  artifacts:
    paths:
      - RomanConverter/build/libs/romanconverter-0.0.1-SNAPSHOT.jar

publish-insurance:
  image: $IMAGE_DOCKER_DIND
  stage: publish
  only:
    - feat/tutorial-9-deployment
  dependencies:
    - build-insurance
  script:
    - echo "Build Insurance image..."
    - cd $CI_PROJECT_DIR
    - docker build -t $IMAGE_INSURANCE:$CI_COMMIT_SHORT_SHA -f $CI_PROJECT_DIR/Dockerfile .
    - docker build -t $IMAGE_INSURANCE:latest -f $CI_PROJECT_DIR/Dockerfile .
    - echo "Publish Insurance image..."
    - echo $REGISTRY_PASSWORD | docker login --username $REGISTRY_USERNAME --password-stdin $REGISTRY_SERVER
    - docker push $IMAGE_INSURANCE:$CI_COMMIT_SHORT_SHA
    - docker push $IMAGE_INSURANCE:latest

deployment:
  stage: deploy
  dependencies:
    - publish-insurance
  only:
    - feat/tutorial-9-deployment
  extends: .setup-ssh
  script:
    - echo "Deploy to server..."
    - ssh "${DEPLOY_USERNAME}@${DEPLOY_SERVER}" "echo ${REGISTRY_PASSWORD} | docker login --username ${REGISTRY_USERNAME} --password-stdin ${REGISTRY_SERVER}"
    - ssh "${DEPLOY_USERNAME}@${DEPLOY_SERVER}" "mkdir -p ~/apap-cicd-243/"
    - rsync -rahv $CI_PROJECT_DIR/docker-compose-deploy.yml "${DEPLOY_USERNAME}@${DEPLOY_SERVER}:~/apap-cicd-243/"
    - ssh "${DEPLOY_USERNAME}@${DEPLOY_SERVER}" 
      "
        export DEPLOY_UID=${DEPLOY_UID} &&
        export IMAGE_INSURANCE=${IMAGE_INSURANCE} &&
        export DATABASE_DEV=${DATABASE_DEV} &&
        export DATABASE_USERNAME_DEV=${DATABASE_USERNAME_DEV} &&
        export DATABASE_PASSWORD_DEV=${DATABASE_PASSWORD_DEV} &&
        cd ~/apap-cicd-243/ &&
        docker compose -f docker-compose-deploy.yml up -d --pull always        
      "

cleaning:
  stage: clean
  dependencies:
    - deployment
  only:
    - feat/tutorial-9-deployment
  extends: .setup-ssh
  script:
    - echo "Cleaning image Insurance..."
    - ssh "${DEPLOY_USERNAME}@${DEPLOY_SERVER}" "docker rmi \$(docker images -f 'dangling=true' -f 'reference=${IMAGE_INSURANCE}' -q) 2>/dev/null"